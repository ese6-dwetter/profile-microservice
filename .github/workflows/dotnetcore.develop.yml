name: .NET Core push on develop branch

on:
  push:
    branches: [develop]

env:
  PROJECT_NAME: ProfileMicroservice
  DOCKER_ORGANIZATION: ese6dwetter
  DOCKER_REPOSITORY: profile-microservice
  KUBERNETES_NAMESPACE: dwetter-develop

jobs:
  sonarcloud-scan:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-18.04
    container:
      image: mcr.microsoft.com/dotnet/core/sdk:3.1.201-bionic
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Decrypt the GPG encrypted config files
        run: gpg --quiet --batch --yes --passphrase ${{ secrets.GPG_PASSPHRASE }}  --output ./${{ env.PROJECT_NAME }}/appsettings.json --decrypt ./${{ env.PROJECT_NAME }}/appsettings.develop.json.gpg

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Test
        run: dotnet test

      - name: Publish
        run: dotnet publish -c Release -o out

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-artifact
          path: ./out

      - name: Upload Dockerfile artifact
        uses: actions/upload-artifact@v3
        with:
          name: dockerfile-artifact
          path: ./Dockerfile

      - name: Upload Kubernetes artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubernetes-artifact
          path: ./kube_develop

  deliver:
    needs: [sonarcloud-scan, build]
    runs-on: ubuntu-18.04
    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: release-artifact
          path: ./out

      - name: Download Dockerfile artifact
        uses: actions/download-artifact@v3
        with:
          name: dockerfile-artifact
          path: .

      - name: Deliver Docker image
        run: |
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          docker build -t ${{ env.DOCKER_ORGANIZATION }}/${{ env.DOCKER_REPOSITORY }}:${{ github.sha }} .
          docker push ${{ env.DOCKER_ORGANIZATION }}/${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}

  deploy:
    needs: deliver
    runs-on: ubuntu-18.04
    steps:
      - name: Download Kubernetes artifact
        uses: actions/download-artifact@v3
        with:
          name: kubernetes-artifact
          path: ./kube_develop

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v1

      - name: Set context via kubeconfig
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy Kubernetes with manifests
        uses: azure/k8s-deploy@v4
        with:
          namespace: ${{ env.KUBERNETES_NAMESPACE }}
          manifests: |
            ./kube_develop/autoscaler.yaml
            ./kube_develop/cluster-issuer.yaml
            ./kube_develop/deployment.yaml
            ./kube_develop/ingress.yaml
            ./kube_develop/service.yaml
          images: |
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
            